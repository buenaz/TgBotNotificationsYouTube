import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.utils import executor
from pytube import YouTube

# –ó–∞–¥–∞–µ–º –≤–∞—à–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –æ—Ç –±–æ—Ç–∞
API_TOKEN = '–¢–û–ö–ï–ù'
CHANNEL_ID = 'bunikwar'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async def send_notification(video_link):
    # –ü–æ–ª—É—á–∏—Ç–µ ID –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–∂–¥–æ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –≤–∏–¥–µ–æ –∏–ª–∏ —à–æ—Ä—Ç–µ
    users = ["user_id"] # –ü—Ä–∏–º–µ—Ä

    for user in users:
        await bot.send_message(user, f'üé• –ù–æ–≤–æ–µ –≤–∏–¥–µ–æ –Ω–∞ –∫–∞–Ω–∞–ª–µ: {video_link}')

# –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ –Ω–∞ –∫–∞–Ω–∞–ª–µ
async def check_new_videos():
    # –ó–¥–µ—Å—å –≤–∞—à –∫–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ –Ω–∞ –∫–∞–Ω–∞–ª–µ
    channel_link = f'https://www.youtube.com/{CHANNEL_ID}'
    # –í–∞—à –∫–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ/—à–æ—Ä—Çc–æ–≤
    await send_notification('https://www.youtube.com/watch?v=VIDEO_ID')

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
async def run_periodically():
    while True:
        await asyncio.sleep(600)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
        await check_new_videos()

if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.create_task(run_periodically())
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ long-polling
    executor.start_polling(dp, skip_updates=True)